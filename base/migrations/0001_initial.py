# Generated by Django 4.2.6 on 2023-10-16 21:02

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CategoriaAnimal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=50, verbose_name='Nome da Categoria')),
            ],
            options={
                'verbose_name': 'Categoria de Animal',
                'verbose_name_plural': 'Categorias de Animais',
            },
        ),
        migrations.CreateModel(
            name='CategoriaBanho',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=50, verbose_name='Nome da Categoria de Banho')),
                ('preco', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Preço')),
            ],
            options={
                'verbose_name': 'Categoria de Banho',
                'verbose_name_plural': 'Categorias de Banho',
            },
        ),
        migrations.CreateModel(
            name='Contato',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=75)),
                ('mensagem', models.TextField()),
                ('data', models.DateTimeField(auto_now_add=True)),
                ('lido', models.BooleanField(blank=True, default=False)),
                ('finalizado', models.BooleanField(blank=True, default=False, verbose_name='Finalizado')),
            ],
            options={
                'verbose_name': 'Formulário de Contato',
                'verbose_name_plural': 'Formulários de Contatos',
                'ordering': ['-nome'],
            },
        ),
        migrations.CreateModel(
            name='RacaAnimal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('raca', models.CharField(max_length=50, verbose_name='Raça do Animal')),
            ],
            options={
                'verbose_name': 'Raça do Animal',
                'verbose_name_plural': 'Raças dos Animais',
            },
        ),
        migrations.CreateModel(
            name='ReservaDeBanhoBase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nomeDoPet', models.CharField(max_length=50, verbose_name='Nome do PET')),
                ('telefone', models.CharField(max_length=15, verbose_name='Telefone')),
                ('diaDaReserva', models.DateField(verbose_name='Dia da Reserva')),
                ('observacoes', models.TextField(blank=True, verbose_name='Observações')),
            ],
        ),
        migrations.CreateModel(
            name='Cliente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('nome', models.CharField(max_length=100)),
                ('cpf', models.CharField(max_length=14, unique=True)),
                ('endereco', models.CharField(max_length=200)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('telefone', models.CharField(max_length=15)),
                ('telefone2', models.CharField(blank=True, max_length=15, null=True)),
                ('groups', models.ManyToManyField(blank=True, related_name='Cliente_set', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='Cliente_set', to='auth.permission')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
